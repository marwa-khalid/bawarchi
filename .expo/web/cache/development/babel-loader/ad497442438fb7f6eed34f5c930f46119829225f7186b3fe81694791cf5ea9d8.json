{"ast":null,"code":"import { defineAnimation } from \"./util\";\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, function () {\n    'worklet';\n    var config = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n    function spring(animation, now) {\n      var toValue = animation.toValue,\n        lastTimestamp = animation.lastTimestamp,\n        current = animation.current,\n        velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      var c = config.damping;\n      var m = config.mass;\n      var k = config.stiffness;\n      var v0 = -velocity;\n      var x0 = toValue - current;\n      var zeta = c / (2 * Math.sqrt(k * m));\n      var omega0 = Math.sqrt(k / m);\n      var omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2));\n      var t = deltaTime / 1000;\n      var sin1 = Math.sin(omega1 * t);\n      var cos1 = Math.cos(omega1 * t);\n      var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n      var underDampedPosition = toValue - underDampedFrag1;\n      var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n      var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n      var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n      var isOvershooting = function isOvershooting() {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue ? animation.current > toValue : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n      var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      var isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n      if (isOvershooting() || isVelocity && isDisplacement) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      if (previousAnimation) {\n        animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n    return {\n      onFrame: spring,\n      onStart: onStart,\n      toValue: toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback: callback,\n      lastTimestamp: 0\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","withSpring","toValue","userConfig","callback","config","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","Object","keys","forEach","key","spring","animation","now","lastTimestamp","current","deltaTime","Math","min","c","m","k","v0","x0","zeta","sqrt","omega0","omega1","pow","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","onStart","value","previousAnimation","onFrame"],"sources":["C:\\Users\\marwa\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\spring.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport {\n  Animation,\n  AnimationCallback,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\n\ninterface SpringConfig {\n  mass?: number;\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n  damping?: number;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\nexport function withSpring(\n  toValue: AnimatableValue,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n): Animation<SpringAnimation> {\n  'worklet';\n\n  return defineAnimation<SpringAnimation>(toValue, () => {\n    'worklet';\n\n    // TODO: figure out why we can't use spread or Object.assign here\n    // when user config is \"frozen object\" we can't enumerate it (perhaps\n    // something is wrong with the object prototype).\n    const config: Required<SpringConfig> = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    function spring(animation: InnerSpringAnimation, now: Timestamp): boolean {\n      const { toValue, lastTimestamp, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const c = config.damping;\n      const m = config.mass;\n      const k = config.stiffness;\n\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n      const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n      const t = deltaTime / 1000;\n\n      const sin1 = Math.sin(omega1 * t);\n      const cos1 = Math.cos(omega1 * t);\n\n      // under damped\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      const underDampedFrag1 =\n        underDampedEnvelope *\n        (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n      const underDampedPosition = toValue - underDampedFrag1;\n      // This looks crazy -- it's actually just the derivative of the oscillation function\n      const underDampedVelocity =\n        zeta * omega0 * underDampedFrag1 -\n        underDampedEnvelope *\n          (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n      // critically damped\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      const criticallyDampedPosition =\n        toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n      const criticallyDampedVelocity =\n        criticallyDampedEnvelope *\n        (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n      const isOvershooting = () => {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue\n            ? animation.current > toValue\n            : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      const isDisplacement =\n        config.stiffness === 0 ||\n        Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n\n      if (isOvershooting() || (isVelocity && isDisplacement)) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      return false;\n    }\n\n    function onStart(\n      animation: SpringAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: SpringAnimation\n    ): void {\n      animation.current = value;\n      if (previousAnimation) {\n        animation.velocity =\n          previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n\n    return {\n      onFrame: spring,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback,\n      lastTimestamp: 0,\n    } as SpringAnimation;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
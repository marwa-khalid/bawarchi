{"ast":null,"code":"import { StyledComponent } from \"tailwindcss-react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TailwindProvider } from \"tailwindcss-react-native\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport RestaurantScreen from \"./screens/RestaurantScreen\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport BasketScreen from \"./screens/BasketScreen\";\nimport { CardStyleInterpolators, TransitionPresets, TransitionSpecs } from \"@react-navigation/stack\";\nimport PreparingScreen from \"./screens/PreparingScreen\";\nimport DeliveryScreen from \"./screens/DeliveryScreen\";\nimport Dummy from \"./screens/Dummy\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsx(TailwindProvider, {\n        children: _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Home\",\n            component: HomeScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Restaurant\",\n            component: RestaurantScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Basket\",\n            component: BasketScreen,\n            options: {\n              presentation: \"modal\",\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Prepare\",\n            component: PreparingScreen,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Delivery\",\n            component: DeliveryScreen,\n            options: {\n              headerShown: false\n            }\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["NavigationContainer","StatusBar","StyleSheet","Text","View","TailwindProvider","HomeScreen","createNativeStackNavigator","RestaurantScreen","Provider","store","BasketScreen","CardStyleInterpolators","TransitionPresets","TransitionSpecs","PreparingScreen","DeliveryScreen","Dummy","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","Screen","name","component","options","presentation","headerShown"],"sources":["C:/Users/marwa/Desktop/akki/Bawarchi/App.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { TailwindProvider } from \"tailwindcss-react-native\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport RestaurantScreen from \"./screens/RestaurantScreen\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport BasketScreen from \"./screens/BasketScreen\";\nimport {\n  CardStyleInterpolators,\n  TransitionPresets,\n  TransitionSpecs,\n} from \"@react-navigation/stack\";\nimport PreparingScreen from \"./screens/PreparingScreen\";\nimport DeliveryScreen from \"./screens/DeliveryScreen\";\nimport Dummy from \"./screens/Dummy\";\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Provider store={store}>\n        <TailwindProvider>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n            <Stack.Screen name=\"Restaurant\" component={RestaurantScreen} />\n\n            <Stack.Screen\n              name=\"Basket\"\n              component={BasketScreen}\n              options={{\n                presentation: \"modal\",\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"Prepare\"\n              component={PreparingScreen}\n              options={{\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"Delivery\"\n              component={DeliveryScreen}\n              options={{\n                headerShown: false,\n              }}\n            />\n          </Stack.Navigator>\n        </TailwindProvider>\n      </Provider>\n    </NavigationContainer>\n  );\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,UAAU;AACjB,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,gBAAgB;AACvB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK;AACd,OAAOC,YAAY;AACnB,SACEC,sBAAsB,EACtBC,iBAAiB,EACjBC,eAAe,QACV,yBAAyB;AAChC,OAAOC,eAAe;AACtB,OAAOC,cAAc;AACrB,OAAOC,KAAK;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpC,IAAMC,KAAK,GAAGf,0BAA0B,EAAE;AAE1C,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACnB,mBAAmB;IAAAwB,QAAA,EAClBL,IAAA,CAACV,QAAQ;MAACC,KAAK,EAAEA,KAAM;MAAAc,QAAA,EACrBL,IAAA,CAACd,gBAAgB;QAAAmB,QAAA,EACfH,KAAA,CAACC,KAAK,CAACG,SAAS;UAAAD,QAAA,GACdL,IAAA,CAACG,KAAK,CAACI,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEtB;UAAW,EAAG,EACnDa,IAAA,CAACG,KAAK,CAACI,MAAM;YAACC,IAAI,EAAC,YAAY;YAACC,SAAS,EAAEpB;UAAiB,EAAG,EAE/DW,IAAA,CAACG,KAAK,CAACI,MAAM;YACXC,IAAI,EAAC,QAAQ;YACbC,SAAS,EAAEjB,YAAa;YACxBkB,OAAO,EAAE;cACPC,YAAY,EAAE,OAAO;cACrBC,WAAW,EAAE;YACf;UAAE,EACF,EACFZ,IAAA,CAACG,KAAK,CAACI,MAAM;YACXC,IAAI,EAAC,SAAS;YACdC,SAAS,EAAEb,eAAgB;YAC3Bc,OAAO,EAAE;cACPE,WAAW,EAAE;YACf;UAAE,EACF,EACFZ,IAAA,CAACG,KAAK,CAACI,MAAM;YACXC,IAAI,EAAC,UAAU;YACfC,SAAS,EAAEZ,cAAe;YAC1Ba,OAAO,EAAE;cACPE,WAAW,EAAE;YACf;UAAE,EACF;QAAA;MACc;IACD;EACV,EACS;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}